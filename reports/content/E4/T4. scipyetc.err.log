Traceback (most recent call last):
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\ppzmis\AppData\Local\miniconda3\envs\instructor\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests
import webbrowser
import json

def nasa_apod(date='2023-01-01'):
    json_request = {'date':'2023-01-01', 'api_key':apikey}
    data =requests.get('https://api.nasa.gov/planetary/apod',params=json_request)
    
    description = json.loads(data.text)['explanation']
    url =json.loads(data.text)['url']
    
    # commented next section to avoid user interaction
    want_to_view=input(description + '\n\n Would you like to view the image? (Y / N)')   
    want_to_view = want_to_view.upper().lstrip()
    if want_to_view[0] == 'Y':
        print('Opening image')
        chrome = webbrowser.get()
        chrome.open(url)
    return url

url = nasa_apod(date='2023-01-01')
print(url)

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mgaierror[0m                                  Traceback (most recent call last)
File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connection.py:196[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    195[0m [38;5;28;01mtry[39;00m:
[1;32m--> 196[0m     sock [38;5;241m=[39m [43mconnection[49m[38;5;241;43m.[39;49m[43mcreate_connection[49m[43m([49m
[0;32m    197[0m [43m        [49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_dns_host[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mport[49m[43m)[49m[43m,[49m
[0;32m    198[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m
[0;32m    199[0m [43m        [49m[43msource_address[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msource_address[49m[43m,[49m
[0;32m    200[0m [43m        [49m[43msocket_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msocket_options[49m[43m,[49m
[0;32m    201[0m [43m    [49m[43m)[49m
[0;32m    202[0m [38;5;28;01mexcept[39;00m socket[38;5;241m.[39mgaierror [38;5;28;01mas[39;00m e:

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\util\connection.py:60[0m, in [0;36mcreate_connection[1;34m(address, timeout, source_address, socket_options)[0m
[0;32m     58[0m     [38;5;28;01mraise[39;00m LocationParseError([38;5;124mf[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m{[39;00mhost[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m, label empty or too long[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m
[1;32m---> 60[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43msocket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[43msocket[49m[38;5;241;43m.[39;49m[43mSOCK_STREAM[49m[43m)[49m:
[0;32m     61[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\socket.py:955[0m, in [0;36mgetaddrinfo[1;34m(host, port, family, type, proto, flags)[0m
[0;32m    954[0m addrlist [38;5;241m=[39m []
[1;32m--> 955[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43m_socket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[38;5;28;43mtype[39;49m[43m,[49m[43m [49m[43mproto[49m[43m,[49m[43m [49m[43mflags[49m[43m)[49m:
[0;32m    956[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

[1;31mgaierror[0m: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

[1;31mNameResolutionError[0m                       Traceback (most recent call last)
File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connectionpool.py:789[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[0;32m    788[0m [38;5;66;03m# Make the request on the HTTPConnection object[39;00m
[1;32m--> 789[0m response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_make_request(
[0;32m    790[0m     conn,
[0;32m    791[0m     method,
[0;32m    792[0m     url,
[0;32m    793[0m     timeout[38;5;241m=[39mtimeout_obj,
[0;32m    794[0m     body[38;5;241m=[39mbody,
[0;32m    795[0m     headers[38;5;241m=[39mheaders,
[0;32m    796[0m     chunked[38;5;241m=[39mchunked,
[0;32m    797[0m     retries[38;5;241m=[39mretries,
[0;32m    798[0m     response_conn[38;5;241m=[39mresponse_conn,
[0;32m    799[0m     preload_content[38;5;241m=[39mpreload_content,
[0;32m    800[0m     decode_content[38;5;241m=[39mdecode_content,
[0;32m    801[0m     [38;5;241m*[39m[38;5;241m*[39mresponse_kw,
[0;32m    802[0m )
[0;32m    804[0m [38;5;66;03m# Everything went great![39;00m

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connectionpool.py:490[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[0;32m    489[0m         new_e [38;5;241m=[39m _wrap_proxy_error(new_e, conn[38;5;241m.[39mproxy[38;5;241m.[39mscheme)
[1;32m--> 490[0m     [38;5;28;01mraise[39;00m new_e
[0;32m    492[0m [38;5;66;03m# conn.request() calls http.client.*.request, not the method in[39;00m
[0;32m    493[0m [38;5;66;03m# urllib3.request. It also calls makefile (recv) on the socket.[39;00m

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connectionpool.py:466[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[0;32m    465[0m [38;5;28;01mtry[39;00m:
[1;32m--> 466[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_conn[49m[43m([49m[43mconn[49m[43m)[49m
[0;32m    467[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError) [38;5;28;01mas[39;00m e:

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connectionpool.py:1095[0m, in [0;36mHTTPSConnectionPool._validate_conn[1;34m(self, conn)[0m
[0;32m   1094[0m [38;5;28;01mif[39;00m conn[38;5;241m.[39mis_closed:
[1;32m-> 1095[0m     [43mconn[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[0;32m   1097[0m [38;5;66;03m# TODO revise this, see https://github.com/urllib3/urllib3/issues/2791[39;00m

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connection.py:615[0m, in [0;36mHTTPSConnection.connect[1;34m(self)[0m
[0;32m    614[0m sock: socket[38;5;241m.[39msocket [38;5;241m|[39m ssl[38;5;241m.[39mSSLSocket
[1;32m--> 615[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m sock [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_new_conn[49m[43m([49m[43m)[49m
[0;32m    616[0m server_hostname: [38;5;28mstr[39m [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhost

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connection.py:203[0m, in [0;36mHTTPConnection._new_conn[1;34m(self)[0m
[0;32m    202[0m [38;5;28;01mexcept[39;00m socket[38;5;241m.[39mgaierror [38;5;28;01mas[39;00m e:
[1;32m--> 203[0m     [38;5;28;01mraise[39;00m NameResolutionError([38;5;28mself[39m[38;5;241m.[39mhost, [38;5;28mself[39m, e) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[0;32m    204[0m [38;5;28;01mexcept[39;00m SocketTimeout [38;5;28;01mas[39;00m e:

[1;31mNameResolutionError[0m: <urllib3.connection.HTTPSConnection object at 0x000001956A6D4D90>: Failed to resolve 'api.nasa.gov' ([Errno 11002] getaddrinfo failed)

The above exception was the direct cause of the following exception:

[1;31mMaxRetryError[0m                             Traceback (most recent call last)
File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\requests\adapters.py:589[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    588[0m [38;5;28;01mtry[39;00m:
[1;32m--> 589[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[0;32m    590[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[0;32m    591[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[0;32m    592[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[0;32m    593[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[0;32m    594[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    595[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    596[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    597[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    598[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[0;32m    599[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[0;32m    600[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[0;32m    601[0m [43m    [49m[43m)[49m
[0;32m    603[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\connectionpool.py:843[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[0;32m    841[0m     new_e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, new_e)
[1;32m--> 843[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[0;32m    844[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43mnew_e[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[0;32m    845[0m [43m[49m[43m)[49m
[0;32m    846[0m retries[38;5;241m.[39msleep()

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\urllib3\util\retry.py:519[0m, in [0;36mRetry.increment[1;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[0;32m    518[0m     reason [38;5;241m=[39m error [38;5;129;01mor[39;00m ResponseError(cause)
[1;32m--> 519[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, reason) [38;5;28;01mfrom[39;00m [38;5;21;01mreason[39;00m  [38;5;66;03m# type: ignore[arg-type][39;00m
[0;32m    521[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)

[1;31mMaxRetryError[0m: HTTPSConnectionPool(host='api.nasa.gov', port=443): Max retries exceeded with url: /planetary/apod?date=2023-01-01&api_key=p1qz2CnVN1AeX5vbN3CQzkLAoCcveU0G18WXMYvA (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000001956A6D4D90>: Failed to resolve 'api.nasa.gov' ([Errno 11002] getaddrinfo failed)"))

During handling of the above exception, another exception occurred:

[1;31mConnectionError[0m                           Traceback (most recent call last)
Cell [1;32mIn[8], line 21[0m
[0;32m     18[0m         chrome[38;5;241m.[39mopen(url)
[0;32m     19[0m     [38;5;28;01mreturn[39;00m url
[1;32m---> 21[0m url [38;5;241m=[39m [43mnasa_apod[49m[43m([49m[43mdate[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43m2023-01-01[39;49m[38;5;124;43m'[39;49m[43m)[49m
[0;32m     22[0m [38;5;28mprint[39m(url)

Cell [1;32mIn[8], line 7[0m, in [0;36mnasa_apod[1;34m(date)[0m
[0;32m      5[0m [38;5;28;01mdef[39;00m [38;5;21mnasa_apod[39m(date[38;5;241m=[39m[38;5;124m'[39m[38;5;124m2023-01-01[39m[38;5;124m'[39m):
[0;32m      6[0m     json_request [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mdate[39m[38;5;124m'[39m:[38;5;124m'[39m[38;5;124m2023-01-01[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mapi_key[39m[38;5;124m'[39m:apikey}
[1;32m----> 7[0m     data [38;5;241m=[39m[43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mhttps://api.nasa.gov/planetary/apod[39;49m[38;5;124;43m'[39;49m[43m,[49m[43mparams[49m[38;5;241;43m=[39;49m[43mjson_request[49m[43m)[49m
[0;32m      9[0m     description [38;5;241m=[39m json[38;5;241m.[39mloads(data[38;5;241m.[39mtext)[[38;5;124m'[39m[38;5;124mexplanation[39m[38;5;124m'[39m]
[0;32m     10[0m     url [38;5;241m=[39mjson[38;5;241m.[39mloads(data[38;5;241m.[39mtext)[[38;5;124m'[39m[38;5;124murl[39m[38;5;124m'[39m]

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\requests\api.py:73[0m, in [0;36mget[1;34m(url, params, **kwargs)[0m
[0;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[0;32m     64[0m 
[0;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[1;32m   (...)[0m
[0;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[0;32m     71[0m [38;5;124;03m    """[39;00m
[1;32m---> 73[0m     [38;5;28;01mreturn[39;00m request([38;5;124m"[39m[38;5;124mget[39m[38;5;124m"[39m, url, params[38;5;241m=[39mparams, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\requests\api.py:59[0m, in [0;36mrequest[1;34m(method, url, **kwargs)[0m
[0;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[0;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[0;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[0;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[1;32m---> 59[0m     [38;5;28;01mreturn[39;00m session[38;5;241m.[39mrequest(method[38;5;241m=[39mmethod, url[38;5;241m=[39murl, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\requests\sessions.py:589[0m, in [0;36mSession.request[1;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[0;32m    584[0m send_kwargs [38;5;241m=[39m {
[0;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[0;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[0;32m    587[0m }
[0;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[1;32m--> 589[0m resp [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msend(prep, [38;5;241m*[39m[38;5;241m*[39msend_kwargs)
[0;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\requests\sessions.py:703[0m, in [0;36mSession.send[1;34m(self, request, **kwargs)[0m
[0;32m    700[0m start [38;5;241m=[39m preferred_clock()
[0;32m    702[0m [38;5;66;03m# Send the request[39;00m
[1;32m--> 703[0m r [38;5;241m=[39m adapter[38;5;241m.[39msend(request, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[0;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [1;32m~\AppData\Local\miniconda3\envs\instructor\lib\site-packages\requests\adapters.py:622[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    618[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[0;32m    619[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[0;32m    620[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[1;32m--> 622[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[0;32m    624[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:
[0;32m    625[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)

[1;31mConnectionError[0m: HTTPSConnectionPool(host='api.nasa.gov', port=443): Max retries exceeded with url: /planetary/apod?date=2023-01-01&api_key=p1qz2CnVN1AeX5vbN3CQzkLAoCcveU0G18WXMYvA (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000001956A6D4D90>: Failed to resolve 'api.nasa.gov' ([Errno 11002] getaddrinfo failed)"))

